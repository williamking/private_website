// Generated by LiveScript 1.3.1
(function(){
  var express, bcrypt, mongoose, router, requireLogin, hasLogin, Article;
  express = require('express');
  bcrypt = require('bcrypt');
  mongoose = require('mongoose');
  router = express.Router();
  requireLogin = require('./authorization/authorize.js').requireLogin;
  hasLogin = require('./authorization/authorize').hasLogin;
  Article = require('../models/Article.js');
  router.get('/', function(req, res){
    Article.findIndex(function(err, index){
      if (err) {
        res.send('Server error!');
        res.end();
      } else {
        if (!index) {
          res.send('Index not found!');
          res.end();
        } else {
          res.render('articles', {
            index: index
          });
        }
      }
    });
  });
  router.get('/create', function(req, res){
    res.render('createArticle');
  });
  router.post('/create', function(req, res){
    var ref$, title, content, secret, category, secretPassword, user;
    ref$ = req.body, title = ref$.title, content = ref$.content, secret = ref$.secret, category = ref$.category, secretPassword = ref$.secretPassword;
    user = {
      _id: req.session.user,
      name: req.session.username
    };
    Article.createArticle(title, content, user, category, secret, secretPassword, function(err, article){
      if (err) {
        res.json({
          result: 'Server Error',
          msg: err.status
        });
      } else {
        if (article) {
          res.json({
            result: 'Success',
            articleId: article._id
          });
        }
      }
    });
  });
  router.get('/:id', function(req, res){
    var id;
    id = mongoose.Types.ObjectId(req.params.id);
    Article.findById(id, function(err, article){
      if (err) {
        res.send('Server error!');
        res.end();
      } else {
        if (!article) {
          res.send('Article not found!');
          res.end();
        } else {
          res.render('childArticle', {
            article: article
          });
        }
      }
    });
  });
  router.get('/edit/:id', function(req, res){
    var id;
    id = mongoose.Types.ObjectId(req.params.id);
    Article.findById(id, function(err, article){
      if (err) {
        res.send('Server error!');
        res.end();
      } else {
        if (!article) {
          res.send('Article not found!');
          res.end();
        } else {
          res.render('childArticle', {
            article: article
          });
        }
      }
    });
  });
  module.exports = router;
}).call(this);
