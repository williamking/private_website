// Generated by LiveScript 1.3.1
(function(){
  var mongoose, ObjectId, CommentSchema, CommentModel;
  mongoose = require('mongoose');
  ObjectId = mongoose.Schema.Types.ObjectId;
  CommentSchema = new mongoose.Schema({
    content: String,
    commentor: String,
    commentAt: {
      type: Date,
      'default': Date.now
    },
    replyTo: {
      type: ObjectId,
      'default': null
    }
  });
  CommentModel = mongoose.model('Comment', CommentSchema);
  CommentModel.addComment = function(content, commentor, replyTo, callback){
    var newComment, func, func2;
    if (replyTo !== null) {
      newComment = new CommentModel({
        content: content,
        commentor: commentor,
        replyTo: replyTo
      });
    } else {
      newComment = new CommentModel({
        content: content,
        commentor: commentor
      });
    }
    console.log(callback);
    func = function(callback, newComment){
      return function(err){
        if (err) {
          callback(err);
        } else {
          callback(null, newComment);
        }
      };
    };
    func2 = func(callback, newComment);
    newComment.save(func2);
  };
  CommentModel.findById(function(id, callback){
    CommentModel.findOne({
      _id: id
    }, callback);
  });
  module.exports = CommentModel;
}).call(this);
