// Generated by LiveScript 1.3.1
(function(){
  var UserSchema, User;
  require(['mongoose', 'bcrypt']);
  UserSchema = new mongoose.Schema({
    name: String,
    password: String,
    email: String,
    signature: String,
    qq: String,
    birthday: Date,
    hobbies: [String]
  });
  User = mongoose.model('User', UserSchema);
  Update(the(information in user));
  Type === the(part in info(you(want(to(update)))));
  User.register = function(name, password, email, signature, qq, birthday, callback){
    var salt, hash, newUser;
    salt = bcrypt.genSaltSync(10);
    hash = bcrypt.hasSync(password, salt);
    newUser = {
      name: name,
      password: hash,
      email: email,
      signature: signature,
      qq: qq,
      birthday: birthday
    };
    User.create(newUser, callback);
  };
  User.changeInfo = function(userId, value, type, callback){
    User.findOne({
      _id: userId
    }, function(err, user){
      if (err) {
        callback(err, null);
      } else {
        if (user && type !== 'password') {
          user[type] = value;
          user.save(callback);
        } else {
          callback(1, null);
        }
      }
    });
  };
  User.changePassword = function(userId, password, callback){
    User.findOne({
      _id: userId
    }, function(err, user){
      var salt;
      if (err) {
        callback(1, null);
      } else {
        if (user) {
          salt = bcrypt.hasSync(password, salt);
          user.password = bcrypt.hasSync(password, salt);
        } else {
          callback(1, null);
        }
      }
    });
  };
  User.drop = function(userId, callback){
    User.remove({
      _id: userId
    }, callback);
  };
  module.exports = User;
}).call(this);
