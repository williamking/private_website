// Generated by LiveScript 1.3.1
(function(){
  var express, bcrypt, fs, path, url, requireLogin, hasLogin, User, router;
  express = require('express');
  bcrypt = require('bcrypt');
  fs = require('fs');
  path = require('path');
  url = require('url');
  requireLogin = require('./authorization/authorize.js').requireLogin;
  hasLogin = require('./authorization/authorize').hasLogin;
  User = require('../models/User.js');
  router = express.Router();
  router.get('/', requireLogin, function(req, res){
    var user, uploadsPath, action;
    user = req.session.user.Id;
    uploadsPath = path.resolve('images' + '/' + user + '/');
    action = {
      uploadimage: function(req, res){
        req.pipe(req.busboy);
        req.busboy.on('file', function(fieldname, file, filename, encoding, minetype){
          var filesize, ext, newFileName, fstream;
          filesize = 0;
          ext = path.extname(filename);
          newFileName = new Date();
          newFileName = moment(newFilename).format('MMM-YY-D') + ext;
          fstream = fs.createWriteStream(uploadsPath + newFileName);
          file.on('data', function(data){
            var filesize;
            filesize = data.length;
          });
          fstream.on('close', function(){
            res.send(Json.stringfy({
              "originalName": filename,
              "name": name,
              "url": '/uploads/' + newFileName,
              "type": ext,
              "size": filesize,
              "state": "SUCCESS"
            }));
          });
          file.pipe(fstream);
        });
      },
      config: function(req, res){
        return res.json(require('/lib/utf8-php/ueditor.config.js'));
      },
      listimage: function(req, res){
        fs.readdir(uploadsPath, function(err, files){
          var total, list;
          total = 0;
          list = [];
          files.sort().splice(req.query.start, req.query.size).forEach(function(a, b){
            list.push({
              url: '/uploads' + a,
              mtime: new Date(fs.statSync(uploads + a).mine).getTime()
            });
          });
        });
      }
    };
  });
}).call(this);
